Check the compiler and CFLAGS options in the file Make_include and adapt to the system you are using.

To compile the code you must first make the FFT library. The FFT library has to be compiled and a library made from it. To make the library cd to the FFTlib directory and type 

> make

then cd to the fdelmodc directory and also type

> make
 
to compile the src code for the FD program. You will see some compile errors passing by, try to solve them. The correct code (without the syntax errors) is in the file with the same name, but with extension .c.ok Use the correct code of the program to see if you have correctly solved the syntax errors.
There are also warnings issued, can you ignore these warnings? 

If you have an executable called fdelmodc you can run the program by running

> ./fdelmod_plane.scr

in the directory fdelmodc/demo/ 

It is very likely that you will encounter an error at runtime, try to find the problem with the help of 'gdb'? This is not an easy taks if you have not done this before. Don't spent too much time to solve the problem, it is important that you know how to use a debugger (dgb). 

To use gdb insert gdb at line 24 in fdelmod_plane.scr

gdb ../fdelmodc \

and execute the fdelmod_plane.scr script.
if you have the (gdb) line run the command:

(gdb) run ../fdelmodc file_cp=model_cp.su file_den=model_cp.su ischeme=1 file_src=wavelet.su verbose=3 file_rcv=rec.su file_snap=snap.su xrcv1=0 xrcv2=2100 dxrcv=15 zrcv1=400 rec_type_vx=1 rec_type_pp=1 rec_type_ss=1 rec_int_vx=1 dtrcv=0.004 xsrc=1000 zsrc=1700 nshot=1 plane_wave=1 nsrc=301 src_type=1 tmod=3.0 src_velo=1800 src_angle=5 cfree=0 boundary=4 ntaper=120 tapleft=1 tapright=1 tapbottom=1 taptop=1 tsnap1=0.1 tsnap2=3.0 dtsnap=0.1 sna_type_ss=1 sna_type_pp=1

In the debugger mode (gdb) you can use the following command to investigate the problem:
where : gives a backtrace of the stack at the moment the error occured
up : goes one level up in that stack
list : shows the source code list
p : print a variable that is available at that stack level (use list to see where you are)
whatis : gives information about a variable
q : quit the debugger.

To generate profile data compile with options -pg or -p -g. Depending on the type of compiler you use different options are needed to generate profile hooks into the code: for example have a look at 'man gcc' to look at the profiling options of the gcc compiler

To show the profiled data use 

> gprof ../fdelmodc gmon.out

in the fdelmodc/demo/ directory.

Note for Apple OSX users the gprof function is not installed but does not always work properly.

OSX maverick with lldb

http://lldb.llvm.org/lldb-gdb.html
