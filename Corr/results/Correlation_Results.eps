%!PS-Adobe-2.0 EPSF-2.0
%%Title: Correlation_Results.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue May 13 17:54:39 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Correlation_Results.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (jan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 13 17:54:39 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 10080.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 704 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 704 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 0) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 1286 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 1286 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 2000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 1867 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 1867 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 4000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 2449 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 2449 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 6000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 3030 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 3030 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 8000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 3612 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 3612 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 10000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 4193 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 4193 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 12000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1342 4775 M
4713 0 V
stroke
LTb
LCb setrgbcolor
1342 4775 M
63 0 V
4650 0 R
-63 0 V
-4782 0 R
( 14000) Rshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1577 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
1577 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 2) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1984 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
1984 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 8) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2391 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
2391 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 32) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2798 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
2798 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 128) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3612 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
3612 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 2048) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4223 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
4223 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 16384) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5037 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
5037 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 262144) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6041 704 M
0 4071 V
stroke
LTb
LCb setrgbcolor
6041 704 M
0 63 V
0 4008 R
0 -63 V
0 -4228 R
( 8e+06) Cshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1342 4775 N
0 -4071 V
4713 0 V
0 4071 V
-4713 0 V
Z stroke
LCb setrgbcolor
176 2739 M
currentpoint gsave translate -270 rotate 0 0 M
(performance [Mflop/s]) Cshow
grestore
LTb
LCb setrgbcolor
3698 154 M
(nt samples) Cshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
3.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
9091 4665 M
(DuoCore 2.5 GHz) Rshow
LT0
9223 4665 M
591 0 V
1577 818 M
203 113 V
204 40 V
203 166 V
204 45 V
203 195 V
204 182 V
203 141 V
204 85 V
204 27 V
203 -1 V
204 -4 V
203 -192 V
204 -6 V
203 4 V
204 -1 V
204 -4 V
203 -20 V
204 -12 V
203 -495 V
204 -34 V
203 -16 V
204 21 V
1577 818 Pls
1780 931 Pls
1984 971 Pls
2187 1137 Pls
2391 1182 Pls
2594 1377 Pls
2798 1559 Pls
3001 1700 Pls
3205 1785 Pls
3409 1812 Pls
3612 1811 Pls
3816 1807 Pls
4019 1615 Pls
4223 1609 Pls
4426 1613 Pls
4630 1612 Pls
4834 1608 Pls
5037 1588 Pls
5241 1576 Pls
5444 1081 Pls
5648 1047 Pls
5851 1031 Pls
6055 1052 Pls
9518 4665 Pls
% End plot #1
% Begin plot #2
1.000 UP
3.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
9091 4445 M
(Opteron 2.2 GHz) Rshow
LT1
9223 4445 M
591 0 V
1577 746 M
203 120 V
204 54 V
203 30 V
204 104 V
203 162 V
204 208 V
203 200 V
204 134 V
204 77 V
203 47 V
204 -12 V
203 21 V
204 -634 V
203 -1 V
204 1 V
4834 976 L
5037 860 L
204 -1 V
203 3 V
204 4 V
203 0 V
204 0 V
1577 746 Crs
1780 866 Crs
1984 920 Crs
2187 950 Crs
2391 1054 Crs
2594 1216 Crs
2798 1424 Crs
3001 1624 Crs
3205 1758 Crs
3409 1835 Crs
3612 1882 Crs
3816 1870 Crs
4019 1891 Crs
4223 1257 Crs
4426 1256 Crs
4630 1257 Crs
4834 976 Crs
5037 860 Crs
5241 859 Crs
5444 862 Crs
5648 866 Crs
5851 866 Crs
6055 866 Crs
9518 4445 Crs
% End plot #2
% Begin plot #3
1.000 UP
3.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
9091 4225 M
(Xeon 3.0 GHz) Rshow
LT2
9223 4225 M
591 0 V
1577 745 M
203 148 V
204 50 V
203 0 V
204 111 V
203 193 V
204 118 V
203 156 V
204 156 V
204 86 V
203 -228 V
204 -122 V
203 21 V
204 0 V
203 -7 V
204 3 V
204 -30 V
203 -290 V
5241 984 L
203 6 V
204 0 V
203 2 V
204 -1 V
1577 745 Star
1780 893 Star
1984 943 Star
2187 943 Star
2391 1054 Star
2594 1247 Star
2798 1365 Star
3001 1521 Star
3205 1677 Star
3409 1763 Star
3612 1535 Star
3816 1413 Star
4019 1434 Star
4223 1434 Star
4426 1427 Star
4630 1430 Star
4834 1400 Star
5037 1110 Star
5241 984 Star
5444 990 Star
5648 990 Star
5851 992 Star
6055 991 Star
9518 4225 Star
% End plot #3
% Begin plot #4
1.000 UP
3.000 UL
LT3
LC3 setrgbcolor
LCb setrgbcolor
9091 4005 M
(Xeon i7 2.0 GHz clang) Rshow
LT3
9223 4005 M
591 0 V
1577 988 M
203 170 V
204 1061 V
203 757 V
204 324 V
203 200 V
204 233 V
203 275 V
204 117 V
204 260 V
203 120 V
204 50 V
203 -649 V
204 44 V
203 5 V
204 -312 V
204 -95 V
203 -110 V
204 -90 V
203 -513 V
204 -520 V
203 -141 V
204 -23 V
1577 988 Box
1780 1158 Box
1984 2219 Box
2187 2976 Box
2391 3300 Box
2594 3500 Box
2798 3733 Box
3001 4008 Box
3205 4125 Box
3409 4385 Box
3612 4505 Box
3816 4555 Box
4019 3906 Box
4223 3950 Box
4426 3955 Box
4630 3643 Box
4834 3548 Box
5037 3438 Box
5241 3348 Box
5444 2835 Box
5648 2315 Box
5851 2174 Box
6055 2151 Box
9518 4005 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LT4
LC4 setrgbcolor
LCb setrgbcolor
9091 3785 M
(Xeon i7 2.0 GHz PGI) Rshow
LT4
9223 3785 M
591 0 V
1577 780 M
203 208 V
204 852 V
203 379 V
204 757 V
203 151 V
204 173 V
203 -89 V
204 -43 V
204 -31 V
203 -25 V
204 -25 V
203 -9 V
204 -2 V
203 -8 V
204 -45 V
204 -83 V
203 15 V
204 -58 V
203 -282 V
204 -420 V
203 -135 V
204 -14 V
1577 780 BoxF
1780 988 BoxF
1984 1840 BoxF
2187 2219 BoxF
2391 2976 BoxF
2594 3127 BoxF
2798 3300 BoxF
3001 3211 BoxF
3205 3168 BoxF
3409 3137 BoxF
3612 3112 BoxF
3816 3087 BoxF
4019 3078 BoxF
4223 3076 BoxF
4426 3068 BoxF
4630 3023 BoxF
4834 2940 BoxF
5037 2955 BoxF
5241 2897 BoxF
5444 2615 BoxF
5648 2195 BoxF
5851 2060 BoxF
6055 2046 BoxF
9518 3785 BoxF
% End plot #5
1.000 UL
LTb
LCb setrgbcolor
1342 4775 N
0 -4071 V
4713 0 V
0 4071 V
-4713 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
