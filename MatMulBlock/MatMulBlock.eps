%!PS-Adobe-2.0 EPSF-2.0
%%Title: MatMulBlock.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Tue Apr 27 16:39:36 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (MatMulBlock.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Jan Thorbecke)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Apr 27 16:39:36 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
858 660 M
5968 0 V
stroke
LTb
858 660 M
63 0 V
5905 0 R
-63 0 V
726 660 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 1125 M
5968 0 V
stroke
LTb
858 1125 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 1590 M
5968 0 V
stroke
LTb
858 1590 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 2055 M
5968 0 V
stroke
LTb
858 2055 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 3) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 2520 M
5968 0 V
stroke
LTb
858 2520 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 2985 M
5968 0 V
stroke
LTb
858 2985 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 3450 M
5968 0 V
stroke
LTb
858 3450 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 6) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 3915 M
5968 0 V
stroke
LTb
858 3915 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 7) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 4380 M
5968 0 V
stroke
LTb
858 4380 M
63 0 V
5905 0 R
-63 0 V
-6037 0 R
( 8) Rshow
1.000 UL
LTb
1.000 UL
LTa
858 660 M
0 3720 V
stroke
LTb
858 660 M
0 63 V
0 3657 R
0 -63 V
858 440 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2321 660 M
0 3720 V
stroke
LTb
2321 660 M
0 63 V
0 3657 R
0 -63 V
0 -3877 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3783 660 M
0 3720 V
stroke
LTb
3783 660 M
0 63 V
0 3657 R
0 -63 V
0 -3877 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5246 660 M
0 3437 V
0 220 R
0 63 V
stroke
LTb
5246 660 M
0 63 V
0 3657 R
0 -63 V
0 -3877 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6709 660 M
0 3720 V
stroke
LTb
6709 660 M
0 63 V
0 3657 R
0 -63 V
0 -3877 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTb
858 4380 N
858 660 L
5968 0 V
0 3720 V
-5968 0 V
Z stroke
LCb setrgbcolor
220 2520 M
currentpoint gsave translate 90 rotate 0 0 M
(runtime in seconds) Cshow
grestore
LTb
LCb setrgbcolor
3842 110 M
(block size) Cshow
LTb
3842 4710 M
(Blocking of Matrix multiplication 2040x2040) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT0
LTb
5839 4207 M
(Mac Core 2 Duo) Rshow
LT0
905 3698 Pls
911 4225 Pls
928 2991 Pls
934 3426 Pls
940 3587 Pls
946 3870 Pls
952 2696 Pls
957 3021 Pls
963 3197 Pls
969 3584 Pls
975 2528 Pls
981 3087 Pls
987 3243 Pls
993 3465 Pls
998 2766 Pls
1004 3008 Pls
1010 3183 Pls
1016 3320 Pls
1022 2670 Pls
1028 2908 Pls
1034 3031 Pls
1039 3161 Pls
1045 2597 Pls
1051 2799 Pls
1057 2897 Pls
1063 3057 Pls
1069 2559 Pls
1074 2730 Pls
1080 2807 Pls
1086 2968 Pls
1092 2511 Pls
1098 2658 Pls
1104 2754 Pls
1110 2873 Pls
1115 2479 Pls
1121 2627 Pls
1127 2704 Pls
1133 2804 Pls
1139 2448 Pls
1145 2571 Pls
1151 2642 Pls
1156 2759 Pls
1162 2418 Pls
1168 2552 Pls
1174 2601 Pls
1180 2717 Pls
1186 2400 Pls
1192 2512 Pls
1197 2574 Pls
1203 2659 Pls
1209 2384 Pls
1215 2486 Pls
1221 2556 Pls
1227 2635 Pls
1232 2367 Pls
1238 2468 Pls
1244 2534 Pls
1250 2624 Pls
1256 2354 Pls
1262 2453 Pls
1268 2502 Pls
1273 2591 Pls
1279 2350 Pls
1285 2430 Pls
1291 2478 Pls
1297 2549 Pls
1303 2344 Pls
1309 2436 Pls
1314 2482 Pls
1320 2513 Pls
1326 2334 Pls
1332 2397 Pls
1338 2448 Pls
1344 2548 Pls
1349 2338 Pls
1355 2419 Pls
1361 2475 Pls
1367 2506 Pls
1373 2314 Pls
1379 2382 Pls
1385 2435 Pls
1390 2500 Pls
1396 2323 Pls
1402 2380 Pls
1408 2398 Pls
1414 2468 Pls
1420 2300 Pls
1426 2361 Pls
1431 2397 Pls
1437 2465 Pls
1443 2298 Pls
1449 2361 Pls
1455 2388 Pls
1461 2431 Pls
1467 2287 Pls
1472 2350 Pls
1478 2380 Pls
1484 2424 Pls
1490 2281 Pls
1496 2352 Pls
1502 2388 Pls
1507 2439 Pls
1513 2298 Pls
1519 2339 Pls
1525 2350 Pls
1531 2391 Pls
1537 2274 Pls
1543 2320 Pls
1548 2352 Pls
1554 2400 Pls
1560 2281 Pls
1566 2321 Pls
1572 2359 Pls
1578 2399 Pls
1584 2286 Pls
1589 2331 Pls
1595 2402 Pls
1601 2404 Pls
1607 2274 Pls
1613 2309 Pls
1619 2346 Pls
1624 2386 Pls
1630 2272 Pls
1636 2307 Pls
1642 2347 Pls
1648 2395 Pls
1654 2271 Pls
1660 2306 Pls
1665 2347 Pls
1671 2386 Pls
1677 2271 Pls
1683 2305 Pls
1689 2350 Pls
1695 2398 Pls
1701 2281 Pls
1706 2303 Pls
1712 2305 Pls
1718 2345 Pls
1724 2250 Pls
1730 2283 Pls
1736 2306 Pls
1741 2350 Pls
1747 2252 Pls
1753 2281 Pls
1759 2305 Pls
1765 2351 Pls
1771 2251 Pls
1777 2279 Pls
1782 2299 Pls
1788 2348 Pls
1794 2249 Pls
1800 2278 Pls
1806 2299 Pls
1812 2341 Pls
1818 2245 Pls
1823 2279 Pls
1829 2298 Pls
1835 2345 Pls
1841 2249 Pls
1847 2283 Pls
1853 2278 Pls
1859 2353 Pls
1864 2244 Pls
1870 2259 Pls
1876 2277 Pls
1882 2300 Pls
1888 2228 Pls
1894 2257 Pls
1899 2275 Pls
1905 2298 Pls
1911 2227 Pls
1917 2263 Pls
1923 2275 Pls
1929 2297 Pls
1935 2233 Pls
1940 2263 Pls
1946 2275 Pls
1952 2296 Pls
1958 2223 Pls
1964 2260 Pls
1970 2279 Pls
1976 2298 Pls
1981 2222 Pls
1987 2258 Pls
1993 2278 Pls
1999 2297 Pls
2005 2240 Pls
2011 2275 Pls
2016 2288 Pls
2022 2310 Pls
2028 2230 Pls
2034 2269 Pls
2040 2290 Pls
2046 2294 Pls
2052 2198 Pls
2057 2211 Pls
2063 2231 Pls
2069 2256 Pls
2075 2203 Pls
2081 2226 Pls
2087 2234 Pls
2093 2256 Pls
2098 2198 Pls
2104 2211 Pls
2110 2241 Pls
2116 2258 Pls
2122 2203 Pls
2128 2212 Pls
2134 2229 Pls
2139 2255 Pls
2145 2200 Pls
2151 2208 Pls
2157 2248 Pls
2163 2271 Pls
2169 2199 Pls
2174 2209 Pls
2180 2227 Pls
2186 2247 Pls
2192 2196 Pls
2198 2207 Pls
2204 2226 Pls
2210 2245 Pls
2215 2196 Pls
2221 2206 Pls
2227 2225 Pls
2233 2245 Pls
2239 2195 Pls
2245 2206 Pls
2251 2226 Pls
2256 2246 Pls
2262 2196 Pls
2268 2206 Pls
2274 2225 Pls
2280 2251 Pls
2286 2198 Pls
2291 2213 Pls
2297 2230 Pls
2303 2262 Pls
2309 2198 Pls
2315 2207 Pls
2321 2226 Pls
2327 2245 Pls
2332 2196 Pls
2338 2205 Pls
2344 2222 Pls
2350 2222 Pls
2356 2174 Pls
2362 2183 Pls
2368 2201 Pls
2373 2221 Pls
2379 2228 Pls
2385 2231 Pls
2391 2272 Pls
2397 2281 Pls
2403 2231 Pls
2409 2234 Pls
2414 2257 Pls
2420 2273 Pls
2426 2258 Pls
2432 2280 Pls
2438 2281 Pls
2444 2305 Pls
2449 2230 Pls
2455 2233 Pls
2461 2264 Pls
2467 2288 Pls
2473 2261 Pls
2479 2232 Pls
2485 2255 Pls
2490 2279 Pls
2496 2232 Pls
2502 2232 Pls
2508 2262 Pls
2514 2278 Pls
2520 2236 Pls
2526 2231 Pls
2531 2257 Pls
2537 2292 Pls
2543 2234 Pls
2549 2240 Pls
2555 2259 Pls
2561 2276 Pls
2566 2234 Pls
2572 2235 Pls
2578 2258 Pls
2584 2277 Pls
2590 2232 Pls
2596 2233 Pls
2602 2281 Pls
2607 2320 Pls
2613 2365 Pls
2619 2236 Pls
2625 2256 Pls
2631 2277 Pls
2637 2228 Pls
2643 2229 Pls
2648 2256 Pls
2654 2275 Pls
2660 2229 Pls
2666 2256 Pls
2672 2276 Pls
2678 2299 Pls
2684 2244 Pls
2689 2236 Pls
2695 2262 Pls
2701 2285 Pls
2707 2258 Pls
2713 2244 Pls
2719 2271 Pls
2724 2285 Pls
2730 2233 Pls
2736 2241 Pls
2742 2284 Pls
2748 2291 Pls
2754 2233 Pls
2760 2232 Pls
2765 2261 Pls
2771 2279 Pls
2777 2241 Pls
2783 2229 Pls
2789 2262 Pls
2795 2282 Pls
2801 2232 Pls
2806 2230 Pls
2812 2259 Pls
2818 2279 Pls
2824 2228 Pls
2830 2229 Pls
2836 2258 Pls
2841 2270 Pls
2847 2211 Pls
2853 2204 Pls
2859 2216 Pls
2865 2234 Pls
2871 2219 Pls
2877 2216 Pls
2882 2238 Pls
2888 2238 Pls
2894 2209 Pls
2900 2205 Pls
2906 2215 Pls
2912 2234 Pls
2918 2206 Pls
2923 2204 Pls
2929 2214 Pls
2935 2234 Pls
2941 2215 Pls
2947 2225 Pls
2953 2221 Pls
2959 2234 Pls
2964 2208 Pls
2970 2206 Pls
2976 2214 Pls
2982 2247 Pls
2988 2206 Pls
2994 2207 Pls
2999 2216 Pls
3005 2235 Pls
3011 2206 Pls
3017 2205 Pls
3023 2224 Pls
3029 2248 Pls
3035 2212 Pls
3040 2212 Pls
3046 2225 Pls
3052 2243 Pls
3058 2216 Pls
3064 2208 Pls
3070 2217 Pls
3076 2255 Pls
3081 2231 Pls
3087 2188 Pls
3093 2196 Pls
3099 2219 Pls
3105 2189 Pls
3111 2188 Pls
3116 2196 Pls
3122 2218 Pls
3128 2189 Pls
3134 2188 Pls
3140 2197 Pls
3146 2249 Pls
3152 2221 Pls
3157 2198 Pls
3163 2196 Pls
3169 2220 Pls
3175 2193 Pls
3181 2191 Pls
3187 2200 Pls
3193 2224 Pls
3198 2193 Pls
3204 2192 Pls
3210 2199 Pls
3216 2228 Pls
3222 2196 Pls
3228 2189 Pls
3233 2197 Pls
3239 2245 Pls
3245 2214 Pls
3251 2207 Pls
3257 2204 Pls
3263 2226 Pls
3269 2194 Pls
3274 2198 Pls
3280 2200 Pls
3286 2232 Pls
3292 2193 Pls
3298 2191 Pls
3304 2209 Pls
3310 2228 Pls
3315 2205 Pls
3321 2208 Pls
3327 2200 Pls
3333 2231 Pls
3339 2197 Pls
3345 2200 Pls
3351 2209 Pls
3356 2227 Pls
3362 2195 Pls
3368 2207 Pls
3374 2252 Pls
3380 2249 Pls
3386 2261 Pls
3391 2194 Pls
3397 2199 Pls
3403 2284 Pls
3409 2214 Pls
3415 2278 Pls
3421 2214 Pls
3427 2228 Pls
3432 2195 Pls
3438 2282 Pls
3444 2237 Pls
3450 2323 Pls
3456 2219 Pls
3462 2231 Pls
3468 2227 Pls
3473 2478 Pls
3479 2511 Pls
3485 2248 Pls
3491 2225 Pls
3497 2242 Pls
3503 2205 Pls
3508 2211 Pls
3514 2212 Pls
3520 2241 Pls
3526 2205 Pls
3532 2202 Pls
3538 2213 Pls
3544 2236 Pls
3549 2207 Pls
3555 2203 Pls
3561 2208 Pls
3567 2246 Pls
3573 2228 Pls
3579 2220 Pls
3585 2240 Pls
3590 2256 Pls
3596 2212 Pls
3602 2214 Pls
3608 2225 Pls
3614 2247 Pls
3620 2243 Pls
3626 2230 Pls
3631 2248 Pls
3637 2274 Pls
3643 2317 Pls
3649 2241 Pls
3655 2273 Pls
3661 2268 Pls
3666 2234 Pls
3672 2241 Pls
3678 2243 Pls
3684 2281 Pls
3690 2239 Pls
3696 2250 Pls
3702 2278 Pls
3707 2282 Pls
3713 2248 Pls
3719 2297 Pls
3725 2394 Pls
3731 2355 Pls
3737 2271 Pls
3743 2306 Pls
3748 2320 Pls
3754 2316 Pls
3760 2277 Pls
3766 2280 Pls
3772 2271 Pls
3778 2312 Pls
3783 2262 Pls
3789 2283 Pls
3795 2293 Pls
3801 2351 Pls
3807 2322 Pls
3813 2485 Pls
3819 2286 Pls
3824 2335 Pls
3830 2296 Pls
3836 2340 Pls
3842 2290 Pls
3848 2342 Pls
3854 2266 Pls
3860 2271 Pls
3865 2272 Pls
3871 2317 Pls
3877 2311 Pls
3883 2299 Pls
3889 2326 Pls
3895 2354 Pls
3901 2353 Pls
3906 2350 Pls
3912 2331 Pls
3918 2348 Pls
3924 2315 Pls
3930 2363 Pls
3936 2378 Pls
3941 2351 Pls
3947 2344 Pls
3953 2360 Pls
3959 2366 Pls
3965 2392 Pls
3971 2359 Pls
3977 2379 Pls
3982 2367 Pls
3988 2405 Pls
3994 2380 Pls
4000 2417 Pls
4006 2401 Pls
4012 2488 Pls
4018 2599 Pls
4023 2650 Pls
4029 2587 Pls
4035 3116 Pls
4041 2539 Pls
4047 2360 Pls
4053 2602 Pls
4058 2986 Pls
4064 2637 Pls
4070 2420 Pls
4076 2373 Pls
4082 2387 Pls
4088 2380 Pls
4094 2393 Pls
4099 2391 Pls
4105 2423 Pls
4111 2402 Pls
4117 2391 Pls
4123 2401 Pls
4129 2416 Pls
4135 2504 Pls
4140 2403 Pls
4146 2410 Pls
4152 2428 Pls
4158 2432 Pls
4164 2456 Pls
4170 2462 Pls
4176 2495 Pls
4181 2451 Pls
4187 2450 Pls
4193 2474 Pls
4199 2479 Pls
4205 2459 Pls
4211 2485 Pls
4216 2471 Pls
4222 2483 Pls
4228 2478 Pls
4234 2508 Pls
4240 2493 Pls
4246 2514 Pls
4252 2514 Pls
4257 2505 Pls
4263 2555 Pls
4269 2544 Pls
4275 2543 Pls
4281 2541 Pls
4287 2628 Pls
4293 3160 Pls
4298 2707 Pls
4304 2627 Pls
4310 2650 Pls
4316 2857 Pls
4322 2626 Pls
4328 2587 Pls
4333 2600 Pls
4339 2619 Pls
4345 2602 Pls
4351 2613 Pls
4357 2604 Pls
4363 2614 Pls
4369 2638 Pls
4374 2659 Pls
4380 2649 Pls
4386 2662 Pls
4392 2672 Pls
4398 2725 Pls
4404 2726 Pls
4410 2765 Pls
4415 2736 Pls
4421 2736 Pls
4427 2722 Pls
4433 2763 Pls
4439 2746 Pls
4445 2738 Pls
4451 2762 Pls
4456 2767 Pls
4462 2744 Pls
4468 2773 Pls
4474 2808 Pls
4480 2808 Pls
4486 2769 Pls
4491 2809 Pls
4497 2794 Pls
4503 2794 Pls
4509 2786 Pls
4515 2798 Pls
4521 2802 Pls
4527 2855 Pls
4532 2828 Pls
4538 2829 Pls
4544 2830 Pls
4550 2901 Pls
4556 2846 Pls
4562 2866 Pls
4568 2865 Pls
4573 2904 Pls
4579 2900 Pls
4585 2896 Pls
4591 2908 Pls
4597 2932 Pls
4603 2913 Pls
4608 2902 Pls
4614 2912 Pls
4620 2945 Pls
4626 2956 Pls
4632 2954 Pls
4638 2948 Pls
4644 2954 Pls
4649 2957 Pls
4655 2963 Pls
4661 2959 Pls
4667 3001 Pls
4673 2963 Pls
4679 3031 Pls
4685 3025 Pls
4690 2995 Pls
4696 2996 Pls
4702 3049 Pls
4708 3235 Pls
4714 3264 Pls
4720 3028 Pls
4725 3058 Pls
4731 3030 Pls
4737 3046 Pls
4743 3036 Pls
4749 3043 Pls
4755 3042 Pls
4761 3049 Pls
4766 3047 Pls
4772 3054 Pls
4778 3124 Pls
4784 3122 Pls
4790 3075 Pls
4796 3083 Pls
4802 3078 Pls
4807 3092 Pls
4813 3104 Pls
4819 3152 Pls
4825 3132 Pls
4831 3096 Pls
4837 3101 Pls
4843 3111 Pls
4848 3148 Pls
4854 3150 Pls
4860 3158 Pls
4866 3130 Pls
4872 3140 Pls
4878 3158 Pls
4883 3144 Pls
4889 3153 Pls
4895 3308 Pls
4901 3192 Pls
4907 3166 Pls
4913 3155 Pls
4919 3150 Pls
4924 3161 Pls
4930 3162 Pls
4936 3161 Pls
4942 3166 Pls
4948 3170 Pls
4954 3156 Pls
4960 3172 Pls
4965 3181 Pls
4971 3239 Pls
4977 3201 Pls
4983 3218 Pls
4989 3213 Pls
4995 3277 Pls
5000 3321 Pls
5006 3453 Pls
5012 3454 Pls
5018 3342 Pls
5024 3278 Pls
5030 3389 Pls
5036 3236 Pls
5041 3261 Pls
5047 3255 Pls
5053 3263 Pls
5059 3238 Pls
5065 3251 Pls
5071 3261 Pls
5077 3263 Pls
5082 3373 Pls
5088 3285 Pls
5094 3272 Pls
5100 3274 Pls
5106 3281 Pls
5112 3282 Pls
5118 3301 Pls
5123 3393 Pls
5129 3336 Pls
5135 3299 Pls
5141 3367 Pls
5147 3366 Pls
5153 3342 Pls
5158 3310 Pls
5164 3316 Pls
5170 3325 Pls
5176 3337 Pls
5182 3317 Pls
5188 3310 Pls
5194 3358 Pls
5199 3348 Pls
5205 3374 Pls
5211 3355 Pls
5217 3324 Pls
5223 3342 Pls
5229 3349 Pls
5235 3335 Pls
5240 3368 Pls
5246 3357 Pls
5252 3365 Pls
5258 3337 Pls
5264 3362 Pls
5270 3375 Pls
5275 3376 Pls
5281 3351 Pls
5287 3373 Pls
5293 3371 Pls
5299 3381 Pls
5305 3372 Pls
5311 3352 Pls
5316 3356 Pls
5322 3411 Pls
5328 3360 Pls
5334 3358 Pls
5340 3361 Pls
5346 3405 Pls
5352 3402 Pls
5357 3397 Pls
5363 3388 Pls
5369 3448 Pls
5375 3385 Pls
5381 3410 Pls
5387 3441 Pls
5393 3411 Pls
5398 3394 Pls
5404 3433 Pls
5410 3447 Pls
5416 3447 Pls
5422 3439 Pls
5428 3491 Pls
5433 3443 Pls
5439 3457 Pls
5445 3434 Pls
5451 3445 Pls
5457 3421 Pls
5463 3434 Pls
5469 3428 Pls
5474 3445 Pls
5480 3445 Pls
5486 3446 Pls
5492 3463 Pls
5498 3506 Pls
5504 3514 Pls
5510 3488 Pls
5515 3480 Pls
5521 3516 Pls
5527 3529 Pls
5533 3629 Pls
5539 3612 Pls
5545 3492 Pls
5550 3606 Pls
5556 3693 Pls
5562 3729 Pls
5568 3499 Pls
5574 3508 Pls
5580 3523 Pls
5586 3666 Pls
5591 3610 Pls
5597 3624 Pls
5603 3655 Pls
5609 3591 Pls
5615 3601 Pls
5621 3516 Pls
5627 3549 Pls
5632 3505 Pls
5638 3535 Pls
5644 3532 Pls
5650 3532 Pls
5656 3513 Pls
5662 3540 Pls
5668 3545 Pls
5673 3545 Pls
5679 3536 Pls
5685 3555 Pls
5691 3566 Pls
5697 3607 Pls
5703 3932 Pls
5708 3586 Pls
5714 3559 Pls
5720 3592 Pls
5726 3565 Pls
5732 3575 Pls
5738 3582 Pls
5744 3576 Pls
5749 3576 Pls
5755 3601 Pls
5761 3579 Pls
5767 3619 Pls
5773 3578 Pls
5779 3600 Pls
5785 3594 Pls
5790 3603 Pls
5796 3599 Pls
5802 3612 Pls
5808 3613 Pls
5814 3651 Pls
5820 3744 Pls
5825 3651 Pls
5831 3623 Pls
5837 3638 Pls
5843 3633 Pls
5849 3667 Pls
5855 3661 Pls
5861 3696 Pls
5866 3678 Pls
5872 3668 Pls
5878 3655 Pls
5884 3695 Pls
5890 3672 Pls
5896 3688 Pls
5902 3692 Pls
5907 3738 Pls
5913 3677 Pls
5919 3741 Pls
5925 3718 Pls
5931 3784 Pls
5937 3859 Pls
5943 3765 Pls
5948 3741 Pls
5954 3780 Pls
5960 3820 Pls
5966 3842 Pls
5972 3850 Pls
5978 3826 Pls
5983 3737 Pls
5989 3766 Pls
5995 3733 Pls
6001 3886 Pls
6007 3827 Pls
6013 3976 Pls
6019 4095 Pls
6030 3892 Pls
6036 3905 Pls
6042 3990 Pls
6048 3925 Pls
6054 3839 Pls
6060 3803 Pls
6065 3765 Pls
6071 3800 Pls
6083 4043 Pls
6089 3837 Pls
6095 3903 Pls
6100 3975 Pls
6106 3808 Pls
6112 3816 Pls
6118 3840 Pls
6124 3914 Pls
6130 4057 Pls
6136 3958 Pls
6141 3973 Pls
6147 4040 Pls
6153 3854 Pls
6159 3904 Pls
6165 4055 Pls
6171 3834 Pls
6177 3872 Pls
6182 4048 Pls
6188 3957 Pls
6194 3928 Pls
6200 3889 Pls
6206 3865 Pls
6212 3876 Pls
6217 3919 Pls
6223 3886 Pls
6229 3879 Pls
6235 3891 Pls
6241 3927 Pls
6247 3950 Pls
6253 3959 Pls
6258 3949 Pls
6264 3893 Pls
6270 3970 Pls
6276 3914 Pls
6282 3914 Pls
6288 3941 Pls
6294 4051 Pls
6299 4144 Pls
6305 4049 Pls
6311 4077 Pls
6317 3948 Pls
6323 4053 Pls
6329 4147 Pls
6335 4161 Pls
6340 4167 Pls
6346 4064 Pls
6352 4114 Pls
6358 4058 Pls
6364 4139 Pls
6370 4115 Pls
6375 4017 Pls
6381 4060 Pls
6387 4048 Pls
6393 3961 Pls
6399 3978 Pls
6405 3971 Pls
6411 3951 Pls
6416 3970 Pls
6422 3977 Pls
6428 3953 Pls
6434 3996 Pls
6440 3963 Pls
6446 3983 Pls
6452 4032 Pls
6457 4102 Pls
6463 4048 Pls
6469 4050 Pls
6475 4040 Pls
6481 3975 Pls
6487 3957 Pls
6492 3994 Pls
6498 4040 Pls
6504 4070 Pls
6510 4054 Pls
6516 4038 Pls
6522 4056 Pls
6528 4015 Pls
6533 3984 Pls
6539 4021 Pls
6545 3964 Pls
6551 4030 Pls
6557 3995 Pls
6563 4018 Pls
6569 3997 Pls
6574 4003 Pls
6580 4002 Pls
6586 3996 Pls
6592 4038 Pls
6598 4136 Pls
6604 4053 Pls
6610 4103 Pls
6615 4033 Pls
6621 4285 Pls
6627 4042 Pls
6633 4091 Pls
6639 4094 Pls
6645 4040 Pls
6650 4000 Pls
6656 4018 Pls
6662 3971 Pls
6668 4028 Pls
6674 4201 Pls
6680 4060 Pls
6686 4087 Pls
6691 4087 Pls
6697 4067 Pls
6703 4032 Pls
6709 3930 Pls
6715 3944 Pls
6721 3927 Pls
6727 3933 Pls
6732 3904 Pls
6738 3931 Pls
6744 3942 Pls
6750 3933 Pls
6756 3912 Pls
6762 3937 Pls
6767 3947 Pls
6773 3939 Pls
6779 3968 Pls
6785 3970 Pls
6791 3978 Pls
6797 3989 Pls
6803 3956 Pls
6808 3976 Pls
6814 3998 Pls
6820 4023 Pls
6826 3933 Pls
6266 4207 Pls
1.000 UL
LTb
858 4380 N
858 660 L
5968 0 V
0 3720 V
-5968 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
