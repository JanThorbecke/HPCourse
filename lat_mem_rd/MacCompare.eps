%!PS-Adobe-2.0 EPSF-2.0
%%Title: MacCompare.eps
%%Creator: gnuplot 5.2 patchlevel 0
%%CreationDate: Tue May  8 15:35:00 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (MacCompare.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May  8 15:35:00 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1078 704 M
5725 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1078 704 M
63 0 V
5662 0 R
-63 0 V
stroke
946 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1078 1527 M
5725 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1078 1527 M
63 0 V
5662 0 R
-63 0 V
stroke
946 1527 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 50)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1078 2350 M
5725 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1078 2350 M
63 0 V
5662 0 R
-63 0 V
stroke
946 2350 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1078 3173 M
5725 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1078 3173 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3173 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 150)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1078 3996 M
5725 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1078 3996 M
63 0 V
5662 0 R
-63 0 V
stroke
946 3996 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1078 4819 M
5725 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1078 4819 M
63 0 V
5662 0 R
-63 0 V
stroke
946 4819 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 250)]
] -73.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2983 704 M
0 4115 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2983 704 M
0 63 V
0 4052 R
0 -63 V
stroke
2983 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.03125)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4572 704 M
0 3612 V
0 440 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4572 704 M
0 63 V
0 4052 R
0 -63 V
stroke
4572 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4889 704 M
0 3612 V
0 440 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4889 704 M
0 63 V
0 4052 R
0 -63 V
stroke
4889 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 2)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5207 704 M
0 3612 V
0 440 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5207 704 M
0 63 V
0 4052 R
0 -63 V
stroke
5207 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 4)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5393 704 M
0 3612 V
0 440 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5393 704 M
0 63 V
0 4052 R
0 -63 V
stroke
5393 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 6)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5843 704 M
0 3612 V
0 440 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5843 704 M
0 63 V
0 4052 R
0 -63 V
stroke
5843 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 16)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6160 704 M
0 3612 V
0 440 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6160 704 M
0 63 V
0 4052 R
0 -63 V
stroke
6160 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 32)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6796 704 M
0 4115 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6796 704 M
0 63 V
0 4052 R
0 -63 V
stroke
6796 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 128)]
] -73.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4819 N
0 -4115 V
5725 0 V
0 4115 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
198 2761 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (clock cycles)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
3940 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (memory size)]
] -73.3 MCshow
LTb
% Begin plot #1
1.000 UP
3.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5816 4646 M
[ [(Helvetica) 220.0 0.0 true true 0 (Mac Core 2 Duo)]
] -73.3 MRshow
1.000 UP
3.000 UL
LTb
0.58 0.00 0.83 C 5948 4646 M
591 0 V
1078 754 M
318 0 V
315 0 V
187 0 V
132 0 V
186 0 V
131 0 V
103 0 V
83 0 V
71 0 V
61 0 V
54 0 V
48 0 V
44 0 V
40 0 V
37 0 V
34 0 V
31 0 V
30 0 V
54 198 V
48 1 V
44 -29 V
40 29 V
36 0 V
34 -1 V
32 0 V
30 0 V
54 0 V
48 1 V
44 0 V
40 0 V
36 0 V
34 0 V
32 0 V
29 0 V
54 0 V
49 0 V
43 0 V
40 0 V
37 0 V
34 0 V
32 0 V
29 0 V
54 0 V
48 0 V
44 0 V
40 0 V
37 0 V
34 0 V
31 0 V
30 0 V
54 0 V
48 0 V
44 0 V
40 0 V
36 0 V
34 0 V
32 0 V
30 0 V
54 3 V
48 2 V
44 0 V
40 0 V
36 0 V
34 0 V
32 1 V
29 -1 V
54 0 V
49 0 V
43 0 V
40 1 V
37 -1 V
34 1 V
32 0 V
29 1 V
54 1 V
48 19 V
44 41 V
40 213 V
37 2257 V
34 957 V
31 -484 V
30 11 V
54 168 V
48 66 V
44 46 V
40 7 V
36 8 V
34 2 V
32 -1 V
30 1 V
54 -2 V
48 5 V
44 2 V
40 -6 V
36 1 V
34 -8 V
32 -12 V
29 -3 V
54 -2 V
49 -2 V
43 -1 V
40 0 V
stroke 6346 4244 M
37 6 V
34 19 V
32 -6 V
29 -17 V
54 73 V
48 -84 V
44 -16 V
40 -14 V
37 13 V
34 139 V
31 -119 V
30 64 V
1078 754 Pls
1396 754 Pls
1711 754 Pls
1898 754 Pls
2030 754 Pls
2216 754 Pls
2347 754 Pls
2450 754 Pls
2533 754 Pls
2604 754 Pls
2665 754 Pls
2719 754 Pls
2767 754 Pls
2811 754 Pls
2851 754 Pls
2888 754 Pls
2922 754 Pls
2953 754 Pls
2983 754 Pls
3037 952 Pls
3085 953 Pls
3129 924 Pls
3169 953 Pls
3205 953 Pls
3239 952 Pls
3271 952 Pls
3301 952 Pls
3355 952 Pls
3403 953 Pls
3447 953 Pls
3487 953 Pls
3523 953 Pls
3557 953 Pls
3589 953 Pls
3618 953 Pls
3672 953 Pls
3721 953 Pls
3764 953 Pls
3804 953 Pls
3841 953 Pls
3875 953 Pls
3907 953 Pls
3936 953 Pls
3990 953 Pls
4038 953 Pls
4082 953 Pls
4122 953 Pls
4159 953 Pls
4193 953 Pls
4224 953 Pls
4254 953 Pls
4308 953 Pls
4356 953 Pls
4400 953 Pls
4440 953 Pls
4476 953 Pls
4510 953 Pls
4542 953 Pls
4572 953 Pls
4626 956 Pls
4674 958 Pls
4718 958 Pls
4758 958 Pls
4794 958 Pls
4828 958 Pls
4860 959 Pls
4889 958 Pls
4943 958 Pls
4992 958 Pls
5035 958 Pls
5075 959 Pls
5112 958 Pls
5146 959 Pls
5178 959 Pls
5207 960 Pls
5261 961 Pls
5309 980 Pls
5353 1021 Pls
5393 1234 Pls
5430 3491 Pls
5464 4448 Pls
5495 3964 Pls
5525 3975 Pls
5579 4143 Pls
5627 4209 Pls
5671 4255 Pls
5711 4262 Pls
5747 4270 Pls
5781 4272 Pls
5813 4271 Pls
5843 4272 Pls
5897 4270 Pls
5945 4275 Pls
5989 4277 Pls
6029 4271 Pls
6065 4272 Pls
6099 4264 Pls
6131 4252 Pls
6160 4249 Pls
6214 4247 Pls
6263 4245 Pls
6306 4244 Pls
6346 4244 Pls
6383 4250 Pls
6417 4269 Pls
6449 4263 Pls
6478 4246 Pls
6532 4319 Pls
6580 4235 Pls
6624 4219 Pls
6664 4205 Pls
6701 4218 Pls
6735 4357 Pls
6766 4238 Pls
6796 4302 Pls
6243 4646 Pls
% End plot #1
% Begin plot #2
1.000 UP
3.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
5816 4426 M
[ [(Helvetica) 220.0 0.0 true true 0 (Mac Core i7)]
] -73.3 MRshow
1.000 UP
3.000 UL
LTb
0.00 0.62 0.45 C 5948 4426 M
591 0 V
1078 745 M
318 0 V
315 0 V
187 0 V
132 0 V
186 0 V
131 0 V
103 0 V
83 1 V
71 0 V
61 0 V
54 0 V
48 0 V
44 0 V
40 -1 V
37 0 V
34 0 V
31 0 V
30 0 V
54 47 V
48 39 V
44 -2 V
40 1 V
36 -17 V
34 -2 V
32 7 V
30 10 V
54 1 V
48 1 V
44 -2 V
40 2 V
36 -1 V
34 2 V
32 -5 V
29 2 V
54 0 V
49 0 V
43 1 V
40 -1 V
37 0 V
34 0 V
32 0 V
29 1 V
54 244 V
48 -3 V
44 0 V
40 -3 V
37 15 V
34 -14 V
31 -6 V
30 8 V
54 -7 V
48 -1 V
44 8 V
40 0 V
36 -8 V
34 0 V
32 1 V
30 -1 V
54 0 V
48 2 V
44 7 V
40 -8 V
36 -1 V
34 10 V
32 -10 V
29 2 V
54 6 V
49 -3 V
43 -4 V
40 0 V
37 4 V
34 22 V
32 -7 V
29 8 V
54 192 V
48 -125 V
44 225 V
40 -112 V
37 -29 V
34 67 V
31 14 V
30 72 V
54 18 V
48 49 V
44 46 V
40 38 V
36 24 V
34 24 V
32 36 V
30 10 V
54 34 V
48 55 V
44 16 V
40 7 V
36 8 V
34 7 V
32 22 V
29 10 V
54 22 V
49 9 V
43 31 V
40 -10 V
stroke 6346 1850 M
37 172 V
34 -166 V
32 15 V
29 7 V
54 0 V
48 30 V
44 -4 V
40 3 V
37 14 V
34 29 V
31 21 V
30 4 V
7 5 V
1078 745 Crs
1396 745 Crs
1711 745 Crs
1898 745 Crs
2030 745 Crs
2216 745 Crs
2347 745 Crs
2450 745 Crs
2533 746 Crs
2604 746 Crs
2665 746 Crs
2719 746 Crs
2767 746 Crs
2811 746 Crs
2851 745 Crs
2888 745 Crs
2922 745 Crs
2953 745 Crs
2983 745 Crs
3037 792 Crs
3085 831 Crs
3129 829 Crs
3169 830 Crs
3205 813 Crs
3239 811 Crs
3271 818 Crs
3301 828 Crs
3355 829 Crs
3403 830 Crs
3447 828 Crs
3487 830 Crs
3523 829 Crs
3557 831 Crs
3589 826 Crs
3618 828 Crs
3672 828 Crs
3721 828 Crs
3764 829 Crs
3804 828 Crs
3841 828 Crs
3875 828 Crs
3907 828 Crs
3936 829 Crs
3990 1073 Crs
4038 1070 Crs
4082 1070 Crs
4122 1067 Crs
4159 1082 Crs
4193 1068 Crs
4224 1062 Crs
4254 1070 Crs
4308 1063 Crs
4356 1062 Crs
4400 1070 Crs
4440 1070 Crs
4476 1062 Crs
4510 1062 Crs
4542 1063 Crs
4572 1062 Crs
4626 1062 Crs
4674 1064 Crs
4718 1071 Crs
4758 1063 Crs
4794 1062 Crs
4828 1072 Crs
4860 1062 Crs
4889 1064 Crs
4943 1070 Crs
4992 1067 Crs
5035 1063 Crs
5075 1063 Crs
5112 1067 Crs
5146 1089 Crs
5178 1082 Crs
5207 1090 Crs
5261 1282 Crs
5309 1157 Crs
5353 1382 Crs
5393 1270 Crs
5430 1241 Crs
5464 1308 Crs
5495 1322 Crs
5525 1394 Crs
5579 1412 Crs
5627 1461 Crs
5671 1507 Crs
5711 1545 Crs
5747 1569 Crs
5781 1593 Crs
5813 1629 Crs
5843 1639 Crs
5897 1673 Crs
5945 1728 Crs
5989 1744 Crs
6029 1751 Crs
6065 1759 Crs
6099 1766 Crs
6131 1788 Crs
6160 1798 Crs
6214 1820 Crs
6263 1829 Crs
6306 1860 Crs
6346 1850 Crs
6383 2022 Crs
6417 1856 Crs
6449 1871 Crs
6478 1878 Crs
6532 1878 Crs
6580 1908 Crs
6624 1904 Crs
6664 1907 Crs
6701 1921 Crs
6735 1950 Crs
6766 1971 Crs
6796 1975 Crs
6243 4426 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1078 4819 N
0 -4115 V
5725 0 V
0 4115 V
-5725 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
