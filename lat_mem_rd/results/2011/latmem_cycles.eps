%!PS-Adobe-2.0 EPSF-2.0
%%Title: latmem_cycles.eps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Wed Apr 27 09:01:47 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 770 554
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (latmem_cycles.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Jan Thorbecke)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 27 09:01:47 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
990 660 M
10069 0 V
stroke
LTb
990 660 M
63 0 V
10006 0 R
-63 0 V
858 660 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 1755 M
10069 0 V
stroke
LTb
990 1755 M
63 0 V
10006 0 R
-63 0 V
858 1755 M
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 2850 M
10069 0 V
stroke
LTb
990 2850 M
63 0 V
10006 0 R
-63 0 V
858 2850 M
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 3945 M
10069 0 V
stroke
LTb
990 3945 M
63 0 V
10006 0 R
-63 0 V
858 3945 M
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 5040 M
10069 0 V
stroke
LTb
990 5040 M
63 0 V
10006 0 R
-63 0 V
858 5040 M
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 6135 M
10069 0 V
stroke
LTb
990 6135 M
63 0 V
10006 0 R
-63 0 V
858 6135 M
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 7230 M
10069 0 V
stroke
LTb
990 7230 M
63 0 V
10006 0 R
-63 0 V
858 7230 M
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 8325 M
10069 0 V
stroke
LTb
990 8325 M
63 0 V
10006 0 R
-63 0 V
858 8325 M
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
990 9420 M
10069 0 V
stroke
LTb
990 9420 M
63 0 V
10006 0 R
-63 0 V
858 9420 M
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
4307 660 M
0 8760 V
stroke
LTb
4307 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 0.03) Cshow
1.000 UL
LTb
1.000 UL
LTa
4866 660 M
0 8760 V
stroke
LTb
4866 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 0.06) Cshow
1.000 UL
LTb
1.000 UL
LTa
6017 660 M
0 8760 V
stroke
LTb
6017 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 0.25) Cshow
1.000 UL
LTb
1.000 UL
LTa
7135 660 M
0 8760 V
stroke
LTb
7135 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTa
7693 660 M
0 8760 V
stroke
LTb
7693 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTa
8252 660 M
0 8760 V
stroke
LTb
8252 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 4) Cshow
1.000 UL
LTb
1.000 UL
LTa
8579 660 M
0 8760 V
stroke
LTb
8579 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 6) Cshow
1.000 UL
LTb
1.000 UL
LTa
9370 660 M
0 8760 V
stroke
LTb
9370 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 16) Cshow
1.000 UL
LTb
1.000 UL
LTa
9929 660 M
0 8760 V
stroke
LTb
9929 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 32) Cshow
1.000 UL
LTb
1.000 UL
LTa
11046 660 M
0 8320 V
stroke
LTb
11046 660 M
0 63 V
0 8697 R
0 -63 V
0 -8917 R
( 128) Cshow
1.000 UL
LTb
1.000 UL
LTb
990 9420 N
990 660 L
10069 0 V
0 8760 V
990 9420 L
Z stroke
LCb setrgbcolor
220 5040 M
currentpoint gsave translate 90 rotate 0 0 M
(clock cycles) Cshow
grestore
LTb
LCb setrgbcolor
6024 110 M
(memory size \(MB\)) Cshow
LTb
6024 9750 M
(Memory latency in cycles with a stride of 64 Bytes) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
2.000 UL
LT0
LTb
13413 9310 M
(Core2DuoT5450) Rshow
LT0
13545 9310 M
591 0 V
990 859 M
559 0 V
555 0 V
328 0 V
232 0 V
327 0 V
231 -1 V
181 0 V
147 0 V
124 0 V
107 0 V
95 0 V
85 0 V
77 0 V
70 0 V
65 0 V
60 0 V
55 0 V
52 1 V
95 729 V
85 0 V
77 0 V
70 -3 V
65 0 V
60 0 V
55 0 V
52 2 V
95 1 V
85 2 V
77 -2 V
70 -1 V
65 0 V
59 0 V
56 3 V
52 5 V
95 11 V
85 -5 V
77 28 V
70 -6 V
64 -35 V
60 -1 V
56 4 V
52 -4 V
95 0 V
85 1 V
77 0 V
70 0 V
64 4 V
60 0 V
56 0 V
52 1 V
95 -3 V
85 4 V
76 1 V
71 1 V
64 8 V
60 0 V
56 38 V
52 36 V
94 29 V
85 66 V
77 65 V
70 60 V
65 61 V
60 86 V
55 104 V
52 112 V
95 70 V
85 168 V
77 47 V
70 34 V
65 -14 V
60 42 V
55 -6 V
52 -17 V
95 3 V
85 18 V
77 -1 V
70 6 V
65 -4 V
59 -6 V
56 -1 V
52 0 V
95 -1 V
85 3 V
77 5 V
70 1 V
65 -5 V
59 2 V
56 -4 V
52 -1 V
95 9 V
85 -8 V
77 4 V
70 10 V
64 -10 V
60 29 V
56 -26 V
52 -2 V
95 -1 V
85 -2 V
77 2 V
70 -4 V
10320 2601 L
60 3 V
56 -4 V
52 0 V
95 0 V
85 3 V
76 -7 V
71 0 V
64 -7 V
60 9 V
55 7 V
52 0 V
990 859 Pls
1549 859 Pls
2104 859 Pls
2432 859 Pls
2664 859 Pls
2991 859 Pls
3222 858 Pls
3403 858 Pls
3550 858 Pls
3674 858 Pls
3781 858 Pls
3876 858 Pls
3961 858 Pls
4038 858 Pls
4108 858 Pls
4173 858 Pls
4233 858 Pls
4288 858 Pls
4340 859 Pls
4435 1588 Pls
4520 1588 Pls
4597 1588 Pls
4667 1585 Pls
4732 1585 Pls
4792 1585 Pls
4847 1585 Pls
4899 1587 Pls
4994 1588 Pls
5079 1590 Pls
5156 1588 Pls
5226 1587 Pls
5291 1587 Pls
5350 1587 Pls
5406 1590 Pls
5458 1595 Pls
5553 1606 Pls
5638 1601 Pls
5715 1629 Pls
5785 1623 Pls
5849 1588 Pls
5909 1587 Pls
5965 1591 Pls
6017 1587 Pls
6112 1587 Pls
6197 1588 Pls
6274 1588 Pls
6344 1588 Pls
6408 1592 Pls
6468 1592 Pls
6524 1592 Pls
6576 1593 Pls
6671 1590 Pls
6756 1594 Pls
6832 1595 Pls
6903 1596 Pls
6967 1604 Pls
7027 1604 Pls
7083 1642 Pls
7135 1678 Pls
7229 1707 Pls
7314 1773 Pls
7391 1838 Pls
7461 1898 Pls
7526 1959 Pls
7586 2045 Pls
7641 2149 Pls
7693 2261 Pls
7788 2331 Pls
7873 2499 Pls
7950 2546 Pls
8020 2580 Pls
8085 2566 Pls
8145 2608 Pls
8200 2602 Pls
8252 2585 Pls
8347 2588 Pls
8432 2606 Pls
8509 2605 Pls
8579 2611 Pls
8644 2607 Pls
8703 2601 Pls
8759 2600 Pls
8811 2600 Pls
8906 2599 Pls
8991 2602 Pls
9068 2607 Pls
9138 2608 Pls
9203 2603 Pls
9262 2605 Pls
9318 2601 Pls
9370 2600 Pls
9465 2609 Pls
9550 2601 Pls
9627 2605 Pls
9697 2615 Pls
9761 2605 Pls
9821 2634 Pls
9877 2608 Pls
9929 2606 Pls
10024 2605 Pls
10109 2603 Pls
10186 2605 Pls
10256 2601 Pls
10320 2601 Pls
10380 2604 Pls
10436 2600 Pls
10488 2600 Pls
10583 2600 Pls
10668 2603 Pls
10744 2596 Pls
10815 2596 Pls
10879 2589 Pls
10939 2598 Pls
10994 2605 Pls
11046 2605 Pls
13840 9310 Pls
1.000 UP
2.000 UL
LT1
LTb
13413 9090 M
(DualCoreOpteron270) Rshow
LT1
13545 9090 M
591 0 V
990 988 M
559 0 V
555 0 V
328 0 V
232 0 V
327 0 V
231 0 V
181 0 V
147 1 V
124 -1 V
107 0 V
95 0 V
85 0 V
77 0 V
70 1 V
65 -1 V
60 0 V
55 0 V
52 1 V
95 0 V
85 -1 V
77 1 V
70 -1 V
65 0 V
60 0 V
55 1 V
52 0 V
95 514 V
85 410 V
77 339 V
70 279 V
65 3 V
59 -3 V
56 3 V
52 -4 V
95 -3 V
85 -3 V
77 3 V
70 -3 V
64 3 V
60 -4 V
56 4 V
52 -4 V
95 4 V
85 -4 V
77 3 V
70 -3 V
64 3 V
60 -3 V
56 3 V
52 -3 V
95 3 V
85 446 V
76 519 V
71 129 V
64 -203 V
60 229 V
56 80 V
52 486 V
94 185 V
85 3176 V
77 866 V
70 682 V
65 98 V
60 -8 V
55 -2610 V
52 -25 V
95 45 V
85 -19 V
77 32 V
70 -22 V
65 28 V
60 2632 V
55 -2619 V
52 -30 V
95 22 V
85 -24 V
77 17 V
70 2643 V
65 -2652 V
59 2660 V
56 14 V
52 -18 V
95 -2629 V
85 -28 V
77 26 V
70 -24 V
65 2658 V
59 -2659 V
56 2658 V
52 11 V
95 -16 V
85 18 V
77 -17 V
70 17 V
64 -15 V
60 16 V
56 -15 V
52 12 V
95 -12 V
85 10 V
77 -13 V
70 -4 V
10320 9293 L
60 -2665 V
56 -4 V
52 0 V
95 2667 V
85 -2667 V
76 23 V
71 2644 V
64 -2671 V
60 30 V
55 -31 V
52 29 V
990 988 Crs
1549 988 Crs
2104 988 Crs
2432 988 Crs
2664 988 Crs
2991 988 Crs
3222 988 Crs
3403 988 Crs
3550 989 Crs
3674 988 Crs
3781 988 Crs
3876 988 Crs
3961 988 Crs
4038 988 Crs
4108 989 Crs
4173 988 Crs
4233 988 Crs
4288 988 Crs
4340 989 Crs
4435 989 Crs
4520 988 Crs
4597 989 Crs
4667 988 Crs
4732 988 Crs
4792 988 Crs
4847 989 Crs
4899 989 Crs
4994 1503 Crs
5079 1913 Crs
5156 2252 Crs
5226 2531 Crs
5291 2534 Crs
5350 2531 Crs
5406 2534 Crs
5458 2530 Crs
5553 2527 Crs
5638 2524 Crs
5715 2527 Crs
5785 2524 Crs
5849 2527 Crs
5909 2523 Crs
5965 2527 Crs
6017 2523 Crs
6112 2527 Crs
6197 2523 Crs
6274 2526 Crs
6344 2523 Crs
6408 2526 Crs
6468 2523 Crs
6524 2526 Crs
6576 2523 Crs
6671 2526 Crs
6756 2972 Crs
6832 3491 Crs
6903 3620 Crs
6967 3417 Crs
7027 3646 Crs
7083 3726 Crs
7135 4212 Crs
7229 4397 Crs
7314 7573 Crs
7391 8439 Crs
7461 9121 Crs
7526 9219 Crs
7586 9211 Crs
7641 6601 Crs
7693 6576 Crs
7788 6621 Crs
7873 6602 Crs
7950 6634 Crs
8020 6612 Crs
8085 6640 Crs
8145 9272 Crs
8200 6653 Crs
8252 6623 Crs
8347 6645 Crs
8432 6621 Crs
8509 6638 Crs
8579 9281 Crs
8644 6629 Crs
8703 9289 Crs
8759 9303 Crs
8811 9285 Crs
8906 6656 Crs
8991 6628 Crs
9068 6654 Crs
9138 6630 Crs
9203 9288 Crs
9262 6629 Crs
9318 9287 Crs
9370 9298 Crs
9465 9282 Crs
9550 9300 Crs
9627 9283 Crs
9697 9300 Crs
9761 9285 Crs
9821 9301 Crs
9877 9286 Crs
9929 9298 Crs
10024 9286 Crs
10109 9296 Crs
10186 9283 Crs
10256 9279 Crs
10320 9293 Crs
10380 6628 Crs
10436 6624 Crs
10488 6624 Crs
10583 9291 Crs
10668 6624 Crs
10744 6647 Crs
10815 9291 Crs
10879 6620 Crs
10939 6650 Crs
10994 6619 Crs
11046 6648 Crs
13840 9090 Crs
1.000 UL
LTb
990 9420 N
990 660 L
10069 0 V
0 8760 V
990 9420 L
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
